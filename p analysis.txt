Check the no of parameters passed to the Perl Script

Exit with specific error code

Write the status (process, suc, err) messages to the log file as well as to screen -
must log the program name (absolute path) and all the parameters supplied 
must log the date & time of execution


prog-1:
Check the no of parameters passed to the program and if any params are missing then return the appropriate status code.
Accept param file as an argument
Check whether the file exits and has read & write access privileges 
Replace parameter value in the file (ex: $paramFile=xyz.prm will become $paramFile=xyz-modified.prm)
Search for a file having the file pattern in a directory
if not found then error
if found get the file name
then search the below regular expression in the file name and extract the business_date
^.*_([0-9]{4}-[0-9]{2}-[0-9]{2})_.*$/
if business_date is empty the log error
Search the parameter file for the parameter Business_Date= and replace it -
with Business_Date=business_date (from the above derived one)
Note: Can also look into changing of part of the string into some-thing by using regular expression.

extended:
Get the value of the parameter (Ex: inboxDir=/usr/tadive then the value is /usr/tadive)

#example of input filename MB_2016_ACT_20170701.csv
#                          MB_2016_LGA_ACT_20170701.csv
#			      CG_ACT_MB_2011_ACT_MB_2016_20170712.csv
#inFilePattern="$inboxDir/*_[[:digit:]][[:digit:]][[:digit:]][[:digit:]]_*.* $inboxDir/standard_postcode_file_pc001_*.*"
inFilePattern="$inboxDir/*_[[:digit:]][[:digit:]][[:digit:]][[:digit:]]_*.* $inboxDir/standard_postcode_file_pc001_*.* $inboxDir/CG_*.* $inboxDir/ERP_*.*"

Create a file input pattern and search the inboxDir for files that matches it
Sort the files by date and time (ls -rt) and should pick just the oldest one
Search the parameter file for Orig_File_Name= with replace an entire line in a file with Orig_File_Name=<<above file_founded>>)
-or- (regex="s#Orig_File_Name=.*#Orig_File_Name=$fileonly#g"; cmd="sed -i $regex $paramFile")
Move the file_founded to different directory
Remove the header from the source file
Count the number of '_' in $inFile
Depending on the _count from above to some thing

Check if the found file is similar to ERP_AGE1_SEX_2011-2014_PHN_APR2015_20150818.txt then -
move to output file_name to ERP_AGE1-2015-08-18_010101 (rename the file)
from the initial file name extract the FILE_TYPE_CD in this case (from the above example) it's PHN
Depending on the FILE_TYPE_CD execute a bteq script (bteq < $scriptDir"/"ABS_ERP_Normalize_Script1.bt) - 
but before that do the following:
replace the Source File absolute path (SOURCE_FILE_PATH) in the bteq script
replace the Transposed File absolute path (TRANSPOSED_FILE_PATH) in the bteq script

Get the no of lines in the file

Note: Execute a linux command (that is having variables Ex: cmd=$"mv $inFile $outFile")



 https://news.sap.com/africa/2017/10/03/gluedata-success-and-learnings-with-hadoop-enterprise-data-warehouse-leveraging-sap-data-services/
 https://www.oreilly.com/learning/how-can-i-bulk-load-data-from-hdfs-to-kudu-using-apache-spark
 

